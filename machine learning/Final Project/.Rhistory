colnames(alc)[1] <- 'State'
colnames(alc)[2] <- 'Year'
alc = alc[which(alc$State != 'District of Columbia'),]
alc <- subset(alc, select = -c(2000,2001,2002,2003,2017))
for(row in range(length(alc))){
print(alc[row,]$State)
alc[row,]$State = gsub(" ", "", alc[row,]$State, fixed = TRUE)
}
alc[1,]$State
#NIAAA alcohol consumption data
alc = read.csv("alcohol consumption.csv",header = T, strip.white=TRUE)
head(alc)
colnames(alc)[1] <- 'State'
colnames(alc)[2] <- 'Year'
alc = alc[which(alc$State != 'District of Columbia'),]
alc <- subset(alc, select = -c(2000,2001,2002,2003,2017))
ef = merge(ef,alc,by.x = c("State","Year"))
head(alc)
head(ef)
ef = merge(ef,alc,by.x = c("State","Year"),by.y = c('State','Year'))
head(ef)
#cato institute freedom in the 50 states
ef = read.csv("Freedom_In_The_50_States_2018.csv",header = T)
ef$State = ef$ï..State
keeps <- c("State", "Year",'Fiscal.Policy','Regulatory.Policy','Personal.Freedom','Economic.Freedom','Overall.Freedom')
ef = ef[keeps]
ef = ef[which(ef$Year > 2003),]
head(ef)
addUS = function(st){
return(paste(c("US-",st),collapse=''))
}
removeUS = function(st){
return(substring(st, 4, 5))
}
#RI Department of Labor and Training
unem = read.csv("annavgunem.csv",header = T)
colnames(unem)[colnames(unem) == 'ï..State'] <- 'State'
for(name in colnames(unem)){
if(substring(name, 1, 1) == 'X'){
colnames(unem)[colnames(unem) == name] <- substring(name, 2, 5)
}
}
unem = unem[which(unem$State != 'United States'),]
unem <- subset(unem, select = -c(2000,2001,2002,2003,2017))
#drops <- c("2000","2001","2002","2003","2017")
#unem = unem[ , !(names(unem) %in% drops)]
unem = na.omit(unem)
unem = unem[which(unem$State != 'District of Columbia'),]
unem = unem[which(unem$State != 'Source: Bureau of Labor Statistics'),]
unem = unem[which(unem$State != ''),]
ef[,"unemployment"] <- NA
for(row in 1:nrow(unem)){
for(col in c('2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004')){
#print(factor(unem$State[row]))
#print(unem[row,col])
ef[which(ef$State == as.character(factor(unem$State[row])) & ef$Year == col),]$unemployment = unem[row,col]
}
}
head(ef)
#NIAAA alcohol consumption data
alc = read.csv("alcohol consumption.csv",header = T, strip.white=TRUE)
head(alc)
colnames(alc)[1] <- 'State'
colnames(alc)[2] <- 'Year'
alc = alc[which(alc$State != 'District of Columbia'),]
alc <- subset(alc, select = -c(2000,2001,2002,2003,2017))
ef = merge(ef,alc,by.x = c("State","Year"),by.y = c('State','Year'))
head(ef)
getTopState = function(query){
toTest = state.abb[state.abb != 'AL']
topState = addUS('AL')
while(length(toTest) > 0){
nextStates = c()
while(length(toTest) > 0 & length(nextStates) < 4){
nextStates = append(nextStates,addUS(toTest[1]))
toTest = toTest[toTest != toTest[1]]
}
nextStates = append(nextStates,topState)
bystate = gtrends(keyword=query, geo=nextStates,time = "2004-01-01 2016-12-31")$interest_over_time
print(toTest)
topState = bystate[which.max(bystate$hits),]$geo
print(topState)
}
return(removeUS(topState))
}
getAllStates = function(query,topState){
print(topState)
toMine = state.abb[state.abb != topState]
topState = addUS(topState)
byState = c()
while(length(toMine) > 0){
nextStates = c()
while(length(toMine) > 0 & length(nextStates) < 4){
nextStates = append(nextStates,addUS(toMine[1]))
toMine = toMine[toMine != toMine[1]]
}
nextStates = append(nextStates,topState)
print(toMine)
if(length(byState) > 0){
#print(1)
byState = rbind(byState, gtrends(keyword=query, geo=nextStates,time = "2004-01-01 2016-12-31")$interest_over_time)
} else {
#print(2)
byState = gtrends(keyword=query, geo=nextStates,time = "2004-01-01 2016-12-31")$interest_over_time
}
#print(head(byState))
}
for(row in 1:nrow(byState)){
byState[row,]$geo = state.name[which(state.abb == removeUS(byState$geo[row]))]
}
print(head(byState))
colnames(byState)[colnames(byState) == 'year'] <- 'Year'
colnames(byState)[colnames(byState) == 'geo'] <- 'State'
print(head(byState))
print('end of function')
return(byState)
}
queries = c('church','anxiety help','solution center','joomla article','emo girls','ifate','video tube',
'flash player 64','black celebrity',
'64 bit','submit your','my wife is pregnant','pogo scrabble','failblog',
'watch full episodes of','free tower defense game',
'gigi spice','jobs in demand')
#queries = c('anxiety help','chur')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
write.csv(MyData, file = "fullData.csv")
head(ef)
corrplot(cor(ef[,!names(ef) %in% c("Year", "State")]))
queries = c('emo girls','ifate','video tube',
'flash player 64','black celebrity',
'64 bit','submit your','my wife is pregnant','pogo scrabble','failblog',
'watch full episodes of','free tower defense game',
'gigi spice','jobs in demand')
#queries = c('anxiety help','chur')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
head(ef)
corrplot(cor(ef[,!names(ef) %in% c("Year", "State")]))
#data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef$emogirls
tempef = ef
tempef[is.na(tempef)] <- 0
tempef$emogirls
ef[is.na(ef)] <- 0
corrplot(cor(ef[,!names(ef) %in% c("Year", "State")]))
queries = c('black celebrity',
'64 bit','submit your','my wife is pregnant','pogo scrabble','failblog',
'watch full episodes of','free tower defense game',
'gigi spice','jobs in demand')
#queries = c('anxiety help','chur')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
ef$watchfullepisodesof
head(ef)
ef$mywifeispregnant
drops <- c("mywifeispregnant")
ef = ef[ , !(names(ef) %in% drops)]
ef$watchfullepisodeof
tempef = ef
head(ef)
ef$watchfullepisodesof
ef$failblog
ef[is.na(ef)] <- 0
head(ef)
queries = c('pregnancy','gigi spice','jobs in','free tower defense game')
#queries = c('anxiety help','chur')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
ef[is.na(ef)] <- 0
corrplot(cor(ef[,!names(ef) %in% c("Year", "State")]))
write.csv(MyData, file = "fullData.csv")
write.csv(ef, file = "fullData.csv")
drops <- c("anxietyhelp")
ef = ef[ , !(names(ef) %in% drops)]
head(ef)
queries = c('anxiety')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
ef[is.na(ef)] <- 0
write.csv(ef, file = "fullData.csv")
head(ef)
queries = c('dating app','online dating','chink','racism','nigger','good books',
'online class','events near me','jokes','football','religion','where to vote')
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
warnings()
ef[is.na(ef)] <- 0
#online dating
queries = c('online dating')
head(ef)
for(query in queries){
print(Sys.time())
print(query)
topState = getTopState(query)
metric = getAllStates(query,topState)
head(metric)
DT <- data.table(date = as.IDate(metric$date), metric[,c('hits','State')])
#temp = data.frame(DT)
#temp = transform(temp, hits = as.integer(hits))
#metric = setNames(aggregate(temp[, c('hits')], list(year(temp$date),temp$State), mean),c('year','State','hits'))
metric = data.frame(DT[,list(mean=mean(as.integer(hits))),by=list(year(date),State)])
ef = merge(ef,metric, by.x=c('Year','State'),by.y=c('year','State'))
colnames(ef)[colnames(ef) == 'mean'] = gsub(" ", "", query, fixed = TRUE)
print(head(ef))
}
ef[is.na(ef)] <- 0
write.csv(ef, file = "fullData.csv")
corrplot(cor(ef[,!names(ef) %in% c("Year", "State")]))
head(ef)
library(AER)
data("USAirlines")
head(USAirlines)
count(USAirlines,'firm')
library(plyr)
count(USAirlines,'firm')
#1 - b
summary(USAirlines)
head(USAirlines)
#1 - c
lm(log(cost) ~ log(output) + L(log(output)^2) + log(price) + load)
#1 - c
lm(log(cost) ~ log(output) + L(log(output)^2) + log(price) + load, data = USAirlines)
#1 - c
out2 <- USAirlines$output^2
lm(log(cost) ~ log(output) + log(out2) + log(price) + load, data = USAirlines)
#1 - c
out2 <- (USAirlines$output)^2
lm(log(cost) ~ log(output) + log(out2) + log(price) + load, data = USAirlines)
summary(mod)
mod = lm(log(cost) ~ log(output) + log(out2) + log(price) + load, data = USAirlines)
summary(mod)
#1 - c
logout2 <- (log(USAirlines$output))^2
mod = lm(log(cost) ~ log(output) + logout2 + log(price) + load, data = USAirlines)
summary(mod)
#1 - d
dummy_cols(USAirlines$year)
#1 - d
library(fastDummies)
dummy_cols(USAirlines$year)
dummy_cols(USAirlines,select_columns = c('year','firm'))
full = dummy_cols(USAirlines,select_columns = c('year','firm'))
head(full)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = USAirlines)
summary(mod)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = year)
year = dummy_cols(USAirlines,select_columns = c('year'))
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = year)
summary(mod)
#1 - d - 2
firm = dummy_cols(USAirlines,select_columns = c('firm'))
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = firm)
summary(mod)
#1 - d - 3
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full)
summary(mod)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = firm)
summary(mod)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = year)
summary(mod)
mod = lm(log(cost) ~ log(output) + logout2 + log(price) + load, data = USAirlines)
summary(mod)
#1 - d - 3
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full)
summary(mod)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = firm)
summary(mod)
#1 - d - 3
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full)
summary(mod)
mod = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = year)
summary(mod)
year = dummy_cols(USAirlines,select_columns = c('year'))
mod1 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = year)
summary(mod1)
#1 - d - 2
firm = dummy_cols(USAirlines,select_columns = c('firm'))
mod2 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = firm)
summary(mod2)
#1 - d - 3
mod3 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full)
summary(mod3)
#1 - e
summary(mod2)
#1 - e
summary(mod1)
summary(mod3)
#1 - e
summary(mod1)
summary(mod3)
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients)
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1['year_1984']$coefficients)
mod1
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients['year_1970'])
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients[,grepl('year',names(mod1$coefficients))])
names(mod1$coefficients)
mod1$coefficients[,grepl('year',names(mod1$coefficients))]
mod1$coefficients[grepl('year',names(mod1$coefficients))]
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients[grepl('year',names(mod1$coefficients))])
plot(mod1$coefficients[grepl('year',names(mod1$coefficients))],xlab=predictor, ylab=coefficient)
axis(1, at=1:14, labels=grepl('year',names(mod1$coefficients)))
plot(mod1$coefficients[grepl('year',names(mod1$coefficients))],xlab='predictor', ylab='coefficient')
axis(1, at=1:14, labels=grepl('year',names(mod1$coefficients)))
grepl('year',names(mod1$coefficients))
mod1$coefficients[grepl('year',names(mod1$coefficients))]
plot(mod3$coefficients[grepl('year',names(mod3$coefficients))],xlab='predictor', ylab='coefficient')
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients[grepl('year',names(mod1$coefficients))],xlab='predictor', ylab='coefficient')
plot(mod3$coefficients[grepl('year',names(mod3$coefficients))],xlab='predictor', ylab='coefficient')
#1 - f
rand <- plm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full)
#1 - f
library(plm)
rand <- plm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, data = full,model = 'random')
rand <- plm(data = full,log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load + ., model = 'random')
head(full)
rand <- plm(data = full,log(cost) ~ . , model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
year_1970 + year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + year_1984 + firm_1 + firm_2 + firm_3 + firm_4 +
firm_5 + firm_6, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
year_1970 + year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + firm_1 + firm_2 + firm_3 + firm_4 +
firm_5, model = 'random')
mod1 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load - year_1984, data = year)
summary(mod1)
#1 - d - 2
firm = dummy_cols(USAirlines,select_columns = c('firm'))
mod2 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load - firm_6, data = firm)
summary(mod2)
#1 - d - 3
mod3 = lm(log(cost) ~ . +
log(output) + logout2 + log(price) + load -
firm - year - output - cost - price - load - year_1984 - firm_6, data = full)
summary(mod3)
#1 - e
summary(mod1)
summary(mod3)
#With both time and firm effects, the time effect coefficients are less significant and have a smaller absolute value
plot(mod1$coefficients[grepl('year',names(mod1$coefficients))],xlab='predictor', ylab='coefficient')
plot(mod3$coefficients[grepl('year',names(mod3$coefficients))],xlab='predictor', ylab='coefficient')
#1 - f
library(plm)
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
year_1970 + year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + year_1984 + firm_1 + firm_2 + firm_3 + firm_4 +
firm_5 + firm_6, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
year_1970 + year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + firm_1 + firm_2 + firm_3 + firm_4 +
firm_5, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + log(price) + load +
year_1970 + year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + firm_1 + firm_2 + firm_3 + firm_4 +
firm_5, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + year_1984 + firm_2 + firm_3 + firm_4 +
firm_5 + firm_6, model = 'random')
rand <- plm(data = full,log(cost) ~
year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
year_1982 + year_1983 + year_1984 + firm_2 + firm_3 + firm_4 +
firm_5 + firm_6, model = 'random')
#rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
#              year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
#              year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
#              year_1982 + year_1983 + year_1984 + firm_2 + firm_3 + firm_4 +
#              firm_5 + firm_6, model = 'random')
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load,model='random')
summary(rand)
#rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load +
#              year_1971 + year_1972 + year_1973 + year_1974 + year_1975 +
#              year_1976 + year_1977 + year_1978 + year_1979 + year_1980 + year_1981 +
#              year_1982 + year_1983 + year_1984 + firm_2 + firm_3 + firm_4 +
#              firm_5 + firm_6, model = 'random')
with <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load)
rand <- plm(data = full,log(cost) ~ log(output) + logout2 + log(price) + load,model='random')
summary(rand)
phtest(with, random)
phtest(with, rand)
